{"ast":null,"code":"var _jsxFileName = \"/Users/vtbadrinarayanan/Desktop/project/Main9-updated/src/home_page/home_page.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import { useNavigate, Link } from \"react-router-dom\";\n// import \"./home_page.css\";\n// import profile_pic from \"./profile_pic.jpg\";\n// import like_pic from \"./like_pic.png\";\n// import { useState, useEffect } from \"react\";\n// import axios from 'axios';\n// import DynamicSearch from \"./searchh\";\n\n// const logo = \"BlogSpace\";\n\n// // Sample data for testing dynamic search\n// const mockUsernames = [\n//     \"john_doe\",\n//     \"jane_doe\",\n//     \"user123\",\n//     \"blogger456\",\n//     \"tech_guru\",\n//     \"coding_master\",\n//     \"dev_enthusiast\",\n//     \"designer_life\",\n//     \"travel_lover\",\n//     \"foodie_jane\",\n//     \"sports_fanatic\"\n// ];\n\n// export default function HomePage() {\n//     const token = localStorage.getItem(\"token\");\n\n//     console.log(token);\n\n//     function filterData(posts) {\n\n//         const tempData = [...posts];\n//         const newData = [];\n//         for (let i = 0; i < tempData.length; i++) {\n\n//             const timeStamp = new Date(tempData[i].created_at).toDateString();\n//             const oneBlog = {\n//                 \"id\": tempData[i].id,\n//                 \"title\": tempData[i].title,\n//                 \"likes\": tempData[i].likes,\n//                 \"content\": tempData[i].content,\n//                 \"status\": tempData[i].status,\n//                 \"timeStamp\": timeStamp\n//             };\n\n//             newData.push(oneBlog);\n//         }\n//         return newData;\n//         console.log(blogs);\n//     }\n//     //To get logged in user's blogs\n//     const [blogs, setBlogs] = useState([]);\n//     useEffect(() => {\n//         const fetchBlogs = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 console.log(`Bearer ${token}`);\n//                 const response = await axios.get(\n//                     'https://29f4-14-194-85-214.ngrok-free.app/posts/getdetails',\n//                     {\n//                         headers: {\n//                             Authorization: `Bearer ${token}`,\n//                             \"ngrok-skip-browser-warning\":\"true\"\n//                         }\n//                     }\n//                 );\n//                 setBlogs(filterData(response.data)); // Assuming response.data is an array of blogs\n//             } catch (error) {\n//                 console.log(error.message);\n//             }\n//         };\n//         fetchBlogs();\n//     }, []); // Empty dependency array ensures useEffect runs only once on component mount\n\n//         // This will get all the usernames\n//     const [usernames, setUsernames] = useState([]);\n\n//     let allUsernames=[];\n//     function filterOnlyUsernames(data){\n//         for(let i=0;i<data.length;i++){\n//             allUsernames.push(data[i].username);\n//         }\n//     }\n\n//     useEffect(()=>{\n//         const fetchUsernames = async () =>{\n//             try{\n//                 const token = localStorage.getItem(\"token\");\n//                 const config = {\n//                     headers:{\n//                        Authorization:`Bearer ${token}`,\n//                        \"ngrok-skip-browser-warning\":\"true\"\n//                     }\n//                 }\n//                 const response = await axios.get(\n//                     \"https://29f4-14-194-85-214.ngrok-free.app/users\",\n//                     config\n//                 );\n//                 filterOnlyUsernames(response.data);\n//                 setUsernames(allUsernames);\n//                 console.log(`allUsernames : ${allUsernames}`);\n//             }catch(error){\n//                 console.log(\"Error\"+error);\n//             }\n\n//         }\n//         fetchUsernames();\n\n//     },[])\n\n//     //To get following people\n\n//     const [followingBlogs,setFollowingBlogs] = useState([]);\n//     //To get the blogs of the following people\n//     useEffect(() => {\n//         const fetchBlogs = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 const response = await axios.get(\n//                     'https://29f4-14-194-85-214.ngrok-free.app/posts/following',\n//                     {\n//                         headers: {\n//                             Authorization: `Bearer ${token}`,\n//                             \"ngrok-skip-browser-warning\":\"true\"\n//                         }\n//                     }\n//                 );\n//                 setFollowingBlogs(filterData(response.data)); // Assuming response.data is an array of blogs\n//             } catch (error) {\n//                 console.log(error.message);\n//             }\n//         };\n//         fetchBlogs();\n//     }, []); \n\n//     return (\n//         <>\n//             <Header usernames={usernames} followers={followers} following={following}/>\n//             <div id=\"main-body\">\n//                 <div id=\"content\">\n//                     <GetLoggedInUserBlogs blogs={blogs} isLoggedInUser={false} />\n//                     <GetFollowingBlogs blogs={followingBlogs} isLoggedInUser={true} />\n//                 </div>\n//                 <div id=\"decoration\"></div>\n//             </div>\n//         </>\n//     );\n// }\n\n// function Header({  usernames, followers, following }) {\n//     const logo = \"BlogSpace\";\n//     const navigate = useNavigate();\n//     const token = localStorage.getItem(\"token\");\n//     const handlePost = () => {\n//         navigate(\"/blogForm\");\n//     };\n\n//     const handleLogout = async()=>{\n//         try{\n//             const config = {\n//                 headers:{\n//                     Authorization : `Bearer ${token}`,\n//                     \"ngrok-skip-browser-warning\":\"true\"\n//                 }\n//             }\n//             const response = await axios.post(\"<Add endpoint here>\",{},config);\n//             alert(\"You have logged out!\");\n\n//         }catch(error){\n//             console.log(`Error : ${error}`)\n//         }\n\n//     }\n\n//     const showFollowing = ()=>{\n//         navigate(\"/following\")\n//     }\n\n//     //This will do the dynamic search\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filteredUsernames, setFilteredUsernames] = useState([]);\n//     const handleSearch = (event) => {\n//         const value = event.target.value;\n//         setSearchTerm(value);\n\n//         if (value === '') {\n//           setFilteredUsernames([]);\n//         } else {\n//           const tempUsernames = usernames.filter(username =>\n//             username.toLowerCase().includes(value.toLowerCase())\n//           );\n//           setFilteredUsernames(tempUsernames);\n//         }\n//       };\n\n//     function handlePersonPage(name){\n//         navigate(`person/${name}`)\n//     }\n\n//     console.log(`Results inside : ${usernames} `)\n//     return (\n//         <>\n//             <header>\n//                 <div><span id=\"logo\">{logo}</span></div>\n//                 <div id=\"home-page-search\">\n//                     <input\n//                         type=\"text\"\n//                         placeholder=\"Search usernames...\"\n//                         value={searchTerm}\n//                         onChange={handleSearch}\n//                     />\n//                     {usernames.length > 0 &&  (\n//                         <ol className=\"username-list\">\n//                         {filteredUsernames.map((filteredUsername, index) => (\n\n//                                 <li key={index} onClick={() => handlePersonPage(filteredUsername)}>\n//                                 <Link to={`/person/${filteredUsername}`}>{filteredUsername}</Link>\n//                                 </li>\n\n//                             ))}\n//                         </ol>\n//                     )}\n//                 </div>\n//                 <div id=\"account-properties\">\n//                     <div>\n//                         <span id=\"Post\" onClick={handlePost}>\n//                             Post\n//                         </span>\n//                     </div>\n\n//                     <div>\n//                         <span id=\"following\" onClick={showFollowing}>\n//                             Following\n//                         </span>\n//                         {/* {showFollowing ? true : false}\n//                         {showFollowing && (\n//                             <ol>\n//                                 {following.map((value,index)=>(<li>{value}</li>))}\n//                             </ol>\n//                         )} */}\n//                     </div>\n//                     <div>\n//                         <span id=\"logout\" onClick={handleLogout}>\n//                             Logout\n//                         </span>\n//                         {/* {showFollowers ? true : false}\n//                         {showFollowers && (\n//                             <ol>\n//                                 {followers.map((value,index)=>(<li>{value}</li>))}\n//                             </ol>\n//                         )} */}\n\n//                     </div>\n//                 </div>\n//             </header>\n//         </>\n//     );\n// }\n\n// function GetFollowingBlogs({blogs, isLoggedInUser}) {\n\n//     blogs.map((blog, index) => (console.log(blog.id)));\n\n//     function loadMore() {\n//         let currHt = document.querySelector(\".myAllBlogs\").style;\n//         console.log(currHt.height);\n//         // document.querySelector(\".myAllBlogs\").style.height = calc(document.querySelector(\".myAllBlogs\").style.height *2) ;\n//     }\n\n//     return (\n//         <>\n//             <div id=\"myBlogs\">\n\n//                 <p style={{ fontSize: 30 + \"px\", display: \"flex\", marginLeft: 640 + \"px\" }}> My Following Blogs </p>\n//                 {blogs.map((blog, index) => (\n//                     <GetOneBlog\n//                         key={index}\n//                         blog_id={blog.id}\n//                         content={blog.content}\n//                         title={blog.title}\n//                         likesCount={blog.likes}\n//                         timeStamp={blog.timeStamp}\n//                         isLoggedInUser={false}\n//                     />\n//                 ))}\n//             </div>\n//         </>\n//     );\n// }\n\n// function GetLoggedInUserBlogs({ blogs, isLoggedInUser }) {\n\n//     function loadMore() {\n//         let currHt = document.querySelector(\".myAllBlogs\").style;\n//         console.log(currHt.height);\n//         // document.querySelector(\".myAllBlogs\").style.height = calc(document.querySelector(\".myAllBlogs\").style.height *2) ;\n//     }\n\n//     return (\n//         <>\n//             <div id=\"myBlogs\">\n//                 <p style={{ fontSize: 30 + \"px\", display: \"flex\", marginLeft: 640 + \"px\" }}> My Blogs </p>\n//                 {blogs.map((blog, index) => (\n//                     <GetOneBlog\n//                         key={index}\n//                         blog_id={blog.id}\n//                         content={blog.content}\n//                         title={blog.title}\n//                         likesCount={blog.likes}\n//                         timeStamp={blog.timeStamp}\n//                         isLoggedInUser={true}\n//                     />\n//                 ))}\n//             </div>\n//         </>\n//     );\n// }\n\n// function GetOneBlog({ blog_id, title, content, likesCount, timeStamp, isLoggedInUser}) {\n\n//     const navigate = useNavigate();\n\n//     const showBlogInSeperatePage = () => {\n//         // navigate(`/blog/${blog_id}`);\n//     };\n\n//     const showBlogInFullScreen = () => {\n//         // navigate(`/blog/${blog_id}`);\n//     };\n\n//     return (\n//         <div className=\"blog\" onClick={showBlogInSeperatePage}>\n//             <div className=\"blog-header\">\n\n//             {isLoggedInUser === true ? <Link to={`/fullContent/true/${title}/${content}/${likesCount}/${timeStamp}`}><p id=\"blog-title\" onClick={showBlogInFullScreen}>{title}</p></Link> : <Link to={`/fullContent/false/${title}/${content}/${likesCount}/${timeStamp}/${blog_id}`}><p id=\"blog-title\" onClick={showBlogInFullScreen}>{title}</p></Link> }\n\n//                 <p>Created at: {timeStamp}</p>\n//             </div>\n//             <div className=\"content\">\n//                 {content}\n//             </div>\n//             <div className=\"blog-footer\">\n//                 <div className=\"likes\">\n//                     <img src={like_pic} alt=\"Likes\" />\n//                     <p className=\"likes\" style={{ margin: 0 + \"px\", marginLeft: 5 + \"px\" }}>\n//                         {likesCount}\n//                     </p>\n//                 </div>\n//                 <div className=\"comments\">\n//                     <Link to={`/showComments/${blog_id}/${isLoggedInUser}`}>Comments</Link>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./home_page.css\";\nimport profile_pic from \"./profile_pic.jpg\";\nimport like_pic from \"./like_pic.png\";\nimport { useState } from \"react\";\nimport DynamicSearch from \"./searchh\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst logo = \"BlogSpace\";\n\n// Sample data for testing dynamic search\nconst mockUsernames = [\"john_doe\", \"jane_doe\", \"user123\", \"blogger456\", \"tech_guru\", \"coding_master\", \"dev_enthusiast\", \"designer_life\", \"travel_lover\", \"foodie_jane\", \"sports_fanatic\"];\nconst sampleBlogs = [{\n  id: 1,\n  title: \"First Blog\",\n  likes: 10,\n  content: \"This is the first blog content.\",\n  status: \"public\",\n  created_at: new Date().toDateString()\n}, {\n  id: 2,\n  title: \"Second Blog\",\n  likes: 20,\n  content: \"This is the second blog content.\",\n  status: \"public\",\n  created_at: new Date().toDateString()\n}];\nconst sampleFollowingBlogs = [{\n  id: 3,\n  title: \"Following Blog\",\n  likes: 5,\n  content: \"This is the following blog content.\",\n  status: \"public\",\n  created_at: new Date().toDateString()\n}];\nexport default function HomePage() {\n  _s();\n  const token = \"sample-token\"; // Sample token for testing\n\n  // Using sample data instead of fetching from server\n  const [blogs, setBlogs] = useState(sampleBlogs);\n  const [usernames, setUsernames] = useState(mockUsernames);\n  const [followingBlogs, setFollowingBlogs] = useState(sampleFollowingBlogs);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      usernames: usernames,\n      followers: [],\n      following: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(GetLoggedInUserBlogs, {\n          blogs: blogs,\n          isLoggedInUser: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GetFollowingBlogs, {\n          blogs: followingBlogs,\n          isLoggedInUser: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"decoration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"XycOFlokSh5fWhNl1bBe2T3PBNU=\");\n_c = HomePage;\nfunction Header({\n  usernames,\n  followers,\n  following\n}) {\n  _s2();\n  const logo = \"BlogSpace\";\n  const navigate = useNavigate();\n  const token = \"sample-token\"; // Sample token for testing\n\n  const handlePost = () => {\n    navigate(\"/blogForm\");\n  };\n  const handleLogout = async () => {\n    alert(\"You have logged out!\");\n  };\n  const showFollowing = () => {\n    navigate(\"/following\");\n  };\n\n  // This will do the dynamic search\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredUsernames, setFilteredUsernames] = useState([]);\n  const handleSearch = event => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    if (value === '') {\n      setFilteredUsernames([]);\n    } else {\n      const tempUsernames = usernames.filter(username => username.toLowerCase().includes(value.toLowerCase()));\n      setFilteredUsernames(tempUsernames);\n    }\n  };\n  function handlePersonPage(name) {\n    navigate(`person/${name}`);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"logo\",\n          children: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home-page-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search usernames...\",\n          value: searchTerm,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this), usernames.length > 0 && /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"username-list\",\n          children: filteredUsernames.map((filteredUsername, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handlePersonPage(filteredUsername),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/person/${filteredUsername}`,\n              children: filteredUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"account-properties\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"Post\",\n            onClick: handlePost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"following\",\n            onClick: showFollowing,\n            children: \"Following\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"logout\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s2(Header, \"faGWhTtbRYfrjNXZ6+MPFmRVLgU=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Header;\nfunction GetFollowingBlogs({\n  blogs,\n  isLoggedInUser\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myBlogs\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 30 + \"px\",\n          display: \"flex\",\n          marginLeft: 640 + \"px\"\n        },\n        children: \" My Following Blogs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }, this), blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(GetOneBlog, {\n        blog_id: blog.id,\n        content: blog.content,\n        title: blog.title,\n        likesCount: blog.likes,\n        timeStamp: blog.created_at,\n        isLoggedInUser: false\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c3 = GetFollowingBlogs;\nfunction GetLoggedInUserBlogs({\n  blogs,\n  isLoggedInUser\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myBlogs\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 30 + \"px\",\n          display: \"flex\",\n          marginLeft: 640 + \"px\"\n        },\n        children: \" My Blogs \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 17\n      }, this), blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(GetOneBlog, {\n        blog_id: blog.id,\n        content: blog.content,\n        title: blog.title,\n        likesCount: blog.likes,\n        timeStamp: blog.created_at,\n        isLoggedInUser: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c4 = GetLoggedInUserBlogs;\nfunction GetOneBlog({\n  blog_id,\n  title,\n  content,\n  likesCount,\n  timeStamp,\n  isLoggedInUser\n}) {\n  _s3();\n  const navigate = useNavigate();\n  const showBlogInSeperatePage = () => {\n    // navigate(`/blog/${blog_id}`);\n  };\n  const showBlogInFullScreen = () => {\n    // navigate(`/blog/${blog_id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog\",\n    onClick: showBlogInSeperatePage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-header\",\n      children: [isLoggedInUser === true ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/fullContent/true/${title}/${content}/${likesCount}/${timeStamp}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"blog-title\",\n          onClick: showBlogInFullScreen,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: `/fullContent/false/${title}/${content}/${likesCount}/${timeStamp}/${blog_id}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"blog-title\",\n          onClick: showBlogInFullScreen,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created at: \", timeStamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"likes\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: like_pic,\n          alt: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"likes\",\n          style: {\n            margin: 0 + \"px\",\n            marginLeft: 5 + \"px\"\n          },\n          children: likesCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/showComments/${blog_id}/${isLoggedInUser}`,\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 588,\n    columnNumber: 9\n  }, this);\n}\n_s3(GetOneBlog, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c5 = GetOneBlog;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"HomePage\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"GetFollowingBlogs\");\n$RefreshReg$(_c4, \"GetLoggedInUserBlogs\");\n$RefreshReg$(_c5, \"GetOneBlog\");","map":{"version":3,"names":["useNavigate","Link","profile_pic","like_pic","useState","DynamicSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","logo","mockUsernames","sampleBlogs","id","title","likes","content","status","created_at","Date","toDateString","sampleFollowingBlogs","HomePage","_s","token","blogs","setBlogs","usernames","setUsernames","followingBlogs","setFollowingBlogs","children","Header","followers","following","fileName","_jsxFileName","lineNumber","columnNumber","GetLoggedInUserBlogs","isLoggedInUser","GetFollowingBlogs","_c","_s2","navigate","handlePost","handleLogout","alert","showFollowing","searchTerm","setSearchTerm","filteredUsernames","setFilteredUsernames","handleSearch","event","value","target","tempUsernames","filter","username","toLowerCase","includes","handlePersonPage","name","type","placeholder","onChange","length","className","map","filteredUsername","index","onClick","to","_c2","style","fontSize","display","marginLeft","blog","GetOneBlog","blog_id","likesCount","timeStamp","_c3","_c4","_s3","showBlogInSeperatePage","showBlogInFullScreen","src","alt","margin","_c5","$RefreshReg$"],"sources":["/Users/vtbadrinarayanan/Desktop/project/Main9-updated/src/home_page/home_page.jsx"],"sourcesContent":["\n// import { useNavigate, Link } from \"react-router-dom\";\n// import \"./home_page.css\";\n// import profile_pic from \"./profile_pic.jpg\";\n// import like_pic from \"./like_pic.png\";\n// import { useState, useEffect } from \"react\";\n// import axios from 'axios';\n// import DynamicSearch from \"./searchh\";\n\n// const logo = \"BlogSpace\";\n\n// // Sample data for testing dynamic search\n// const mockUsernames = [\n//     \"john_doe\",\n//     \"jane_doe\",\n//     \"user123\",\n//     \"blogger456\",\n//     \"tech_guru\",\n//     \"coding_master\",\n//     \"dev_enthusiast\",\n//     \"designer_life\",\n//     \"travel_lover\",\n//     \"foodie_jane\",\n//     \"sports_fanatic\"\n// ];\n\n// export default function HomePage() {\n//     const token = localStorage.getItem(\"token\");\n    \n//     console.log(token);\n    \n    \n    \n\n//     function filterData(posts) {\n        \n//         const tempData = [...posts];\n//         const newData = [];\n//         for (let i = 0; i < tempData.length; i++) {\n           \n//             const timeStamp = new Date(tempData[i].created_at).toDateString();\n//             const oneBlog = {\n//                 \"id\": tempData[i].id,\n//                 \"title\": tempData[i].title,\n//                 \"likes\": tempData[i].likes,\n//                 \"content\": tempData[i].content,\n//                 \"status\": tempData[i].status,\n//                 \"timeStamp\": timeStamp\n//             };\n            \n//             newData.push(oneBlog);\n//         }\n//         return newData;\n//         console.log(blogs);\n//     }\n//     //To get logged in user's blogs\n//     const [blogs, setBlogs] = useState([]);\n//     useEffect(() => {\n//         const fetchBlogs = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 console.log(`Bearer ${token}`);\n//                 const response = await axios.get(\n//                     'https://29f4-14-194-85-214.ngrok-free.app/posts/getdetails',\n//                     {\n//                         headers: {\n//                             Authorization: `Bearer ${token}`,\n//                             \"ngrok-skip-browser-warning\":\"true\"\n//                         }\n//                     }\n//                 );\n//                 setBlogs(filterData(response.data)); // Assuming response.data is an array of blogs\n//             } catch (error) {\n//                 console.log(error.message);\n//             }\n//         };\n//         fetchBlogs();\n//     }, []); // Empty dependency array ensures useEffect runs only once on component mount\n\n//         // This will get all the usernames\n//     const [usernames, setUsernames] = useState([]);\n\n//     let allUsernames=[];\n//     function filterOnlyUsernames(data){\n//         for(let i=0;i<data.length;i++){\n//             allUsernames.push(data[i].username);\n//         }\n//     }\n\n\n//     useEffect(()=>{\n//         const fetchUsernames = async () =>{\n//             try{\n//                 const token = localStorage.getItem(\"token\");\n//                 const config = {\n//                     headers:{\n//                        Authorization:`Bearer ${token}`,\n//                        \"ngrok-skip-browser-warning\":\"true\"\n//                     }\n//                 }\n//                 const response = await axios.get(\n//                     \"https://29f4-14-194-85-214.ngrok-free.app/users\",\n//                     config\n//                 );\n//                 filterOnlyUsernames(response.data);\n//                 setUsernames(allUsernames);\n//                 console.log(`allUsernames : ${allUsernames}`);\n//             }catch(error){\n//                 console.log(\"Error\"+error);\n//             }\n            \n//         }\n//         fetchUsernames();\n        \n//     },[])\n\n    \n\n\n    \n//     //To get following people\n    \n//     const [followingBlogs,setFollowingBlogs] = useState([]);\n//     //To get the blogs of the following people\n//     useEffect(() => {\n//         const fetchBlogs = async () => {\n//             try {\n//                 const token = localStorage.getItem('token');\n//                 const response = await axios.get(\n//                     'https://29f4-14-194-85-214.ngrok-free.app/posts/following',\n//                     {\n//                         headers: {\n//                             Authorization: `Bearer ${token}`,\n//                             \"ngrok-skip-browser-warning\":\"true\"\n//                         }\n//                     }\n//                 );\n//                 setFollowingBlogs(filterData(response.data)); // Assuming response.data is an array of blogs\n//             } catch (error) {\n//                 console.log(error.message);\n//             }\n//         };\n//         fetchBlogs();\n//     }, []); \n\n    \n\n//     return (\n//         <>\n//             <Header usernames={usernames} followers={followers} following={following}/>\n//             <div id=\"main-body\">\n//                 <div id=\"content\">\n//                     <GetLoggedInUserBlogs blogs={blogs} isLoggedInUser={false} />\n//                     <GetFollowingBlogs blogs={followingBlogs} isLoggedInUser={true} />\n//                 </div>\n//                 <div id=\"decoration\"></div>\n//             </div>\n//         </>\n//     );\n// }\n\n// function Header({  usernames, followers, following }) {\n//     const logo = \"BlogSpace\";\n//     const navigate = useNavigate();\n//     const token = localStorage.getItem(\"token\");\n//     const handlePost = () => {\n//         navigate(\"/blogForm\");\n//     };\n\n    \n\n//     const handleLogout = async()=>{\n//         try{\n//             const config = {\n//                 headers:{\n//                     Authorization : `Bearer ${token}`,\n//                     \"ngrok-skip-browser-warning\":\"true\"\n//                 }\n//             }\n//             const response = await axios.post(\"<Add endpoint here>\",{},config);\n//             alert(\"You have logged out!\");\n\n//         }catch(error){\n//             console.log(`Error : ${error}`)\n//         }\n        \n//     }\n\n//     const showFollowing = ()=>{\n//         navigate(\"/following\")\n//     }\n\n//     //This will do the dynamic search\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [filteredUsernames, setFilteredUsernames] = useState([]);\n//     const handleSearch = (event) => {\n//         const value = event.target.value;\n//         setSearchTerm(value);\n    \n//         if (value === '') {\n//           setFilteredUsernames([]);\n//         } else {\n//           const tempUsernames = usernames.filter(username =>\n//             username.toLowerCase().includes(value.toLowerCase())\n//           );\n//           setFilteredUsernames(tempUsernames);\n//         }\n//       };\n\n//     function handlePersonPage(name){\n//         navigate(`person/${name}`)\n//     }\n\n    \n    \n//     console.log(`Results inside : ${usernames} `)\n//     return (\n//         <>\n//             <header>\n//                 <div><span id=\"logo\">{logo}</span></div>\n//                 <div id=\"home-page-search\">\n//                     <input\n//                         type=\"text\"\n//                         placeholder=\"Search usernames...\"\n//                         value={searchTerm}\n//                         onChange={handleSearch}\n//                     />\n//                     {usernames.length > 0 &&  (\n//                         <ol className=\"username-list\">\n//                         {filteredUsernames.map((filteredUsername, index) => (\n                            \n//                                 <li key={index} onClick={() => handlePersonPage(filteredUsername)}>\n//                                 <Link to={`/person/${filteredUsername}`}>{filteredUsername}</Link>\n//                                 </li>\n                            \n//                             ))}\n//                         </ol>\n//                     )}\n//                 </div>\n//                 <div id=\"account-properties\">\n//                     <div>\n//                         <span id=\"Post\" onClick={handlePost}>\n//                             Post\n//                         </span>\n//                     </div>\n                    \n//                     <div>\n//                         <span id=\"following\" onClick={showFollowing}>\n//                             Following\n//                         </span>\n//                         {/* {showFollowing ? true : false}\n//                         {showFollowing && (\n//                             <ol>\n//                                 {following.map((value,index)=>(<li>{value}</li>))}\n//                             </ol>\n//                         )} */}\n//                     </div>\n//                     <div>\n//                         <span id=\"logout\" onClick={handleLogout}>\n//                             Logout\n//                         </span>\n//                         {/* {showFollowers ? true : false}\n//                         {showFollowers && (\n//                             <ol>\n//                                 {followers.map((value,index)=>(<li>{value}</li>))}\n//                             </ol>\n//                         )} */}\n\n//                     </div>\n//                 </div>\n//             </header>\n//         </>\n//     );\n// }\n\n// function GetFollowingBlogs({blogs, isLoggedInUser}) {\n   \n//     blogs.map((blog, index) => (console.log(blog.id)));\n\n//     function loadMore() {\n//         let currHt = document.querySelector(\".myAllBlogs\").style;\n//         console.log(currHt.height);\n//         // document.querySelector(\".myAllBlogs\").style.height = calc(document.querySelector(\".myAllBlogs\").style.height *2) ;\n//     }\n\n//     return (\n//         <>\n//             <div id=\"myBlogs\">\n                \n//                 <p style={{ fontSize: 30 + \"px\", display: \"flex\", marginLeft: 640 + \"px\" }}> My Following Blogs </p>\n//                 {blogs.map((blog, index) => (\n//                     <GetOneBlog\n//                         key={index}\n//                         blog_id={blog.id}\n//                         content={blog.content}\n//                         title={blog.title}\n//                         likesCount={blog.likes}\n//                         timeStamp={blog.timeStamp}\n//                         isLoggedInUser={false}\n//                     />\n//                 ))}\n//             </div>\n//         </>\n//     );\n// }\n\n// function GetLoggedInUserBlogs({ blogs, isLoggedInUser }) {\n    \n    \n\n//     function loadMore() {\n//         let currHt = document.querySelector(\".myAllBlogs\").style;\n//         console.log(currHt.height);\n//         // document.querySelector(\".myAllBlogs\").style.height = calc(document.querySelector(\".myAllBlogs\").style.height *2) ;\n//     }\n\n//     return (\n//         <>\n//             <div id=\"myBlogs\">\n//                 <p style={{ fontSize: 30 + \"px\", display: \"flex\", marginLeft: 640 + \"px\" }}> My Blogs </p>\n//                 {blogs.map((blog, index) => (\n//                     <GetOneBlog\n//                         key={index}\n//                         blog_id={blog.id}\n//                         content={blog.content}\n//                         title={blog.title}\n//                         likesCount={blog.likes}\n//                         timeStamp={blog.timeStamp}\n//                         isLoggedInUser={true}\n//                     />\n//                 ))}\n//             </div>\n//         </>\n//     );\n// }\n\n// function GetOneBlog({ blog_id, title, content, likesCount, timeStamp, isLoggedInUser}) {\n    \n//     const navigate = useNavigate();\n\n//     const showBlogInSeperatePage = () => {\n//         // navigate(`/blog/${blog_id}`);\n//     };\n\n//     const showBlogInFullScreen = () => {\n//         // navigate(`/blog/${blog_id}`);\n//     };\n\n//     return (\n//         <div className=\"blog\" onClick={showBlogInSeperatePage}>\n//             <div className=\"blog-header\">\n\n//             {isLoggedInUser === true ? <Link to={`/fullContent/true/${title}/${content}/${likesCount}/${timeStamp}`}><p id=\"blog-title\" onClick={showBlogInFullScreen}>{title}</p></Link> : <Link to={`/fullContent/false/${title}/${content}/${likesCount}/${timeStamp}/${blog_id}`}><p id=\"blog-title\" onClick={showBlogInFullScreen}>{title}</p></Link> }\n\n            \n//                 <p>Created at: {timeStamp}</p>\n//             </div>\n//             <div className=\"content\">\n//                 {content}\n//             </div>\n//             <div className=\"blog-footer\">\n//                 <div className=\"likes\">\n//                     <img src={like_pic} alt=\"Likes\" />\n//                     <p className=\"likes\" style={{ margin: 0 + \"px\", marginLeft: 5 + \"px\" }}>\n//                         {likesCount}\n//                     </p>\n//                 </div>\n//                 <div className=\"comments\">\n//                     <Link to={`/showComments/${blog_id}/${isLoggedInUser}`}>Comments</Link>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./home_page.css\";\nimport profile_pic from \"./profile_pic.jpg\";\nimport like_pic from \"./like_pic.png\";\nimport { useState } from \"react\";\nimport DynamicSearch from \"./searchh\";\n\nconst logo = \"BlogSpace\";\n\n// Sample data for testing dynamic search\nconst mockUsernames = [\n    \"john_doe\",\n    \"jane_doe\",\n    \"user123\",\n    \"blogger456\",\n    \"tech_guru\",\n    \"coding_master\",\n    \"dev_enthusiast\",\n    \"designer_life\",\n    \"travel_lover\",\n    \"foodie_jane\",\n    \"sports_fanatic\"\n];\n\nconst sampleBlogs = [\n    {\n        id: 1,\n        title: \"First Blog\",\n        likes: 10,\n        content: \"This is the first blog content.\",\n        status: \"public\",\n        created_at: new Date().toDateString(),\n    },\n    {\n        id: 2,\n        title: \"Second Blog\",\n        likes: 20,\n        content: \"This is the second blog content.\",\n        status: \"public\",\n        created_at: new Date().toDateString(),\n    },\n];\n\nconst sampleFollowingBlogs = [\n    {\n        id: 3,\n        title: \"Following Blog\",\n        likes: 5,\n        content: \"This is the following blog content.\",\n        status: \"public\",\n        created_at: new Date().toDateString(),\n    },\n];\n\nexport default function HomePage() {\n    const token = \"sample-token\"; // Sample token for testing\n\n    // Using sample data instead of fetching from server\n    const [blogs, setBlogs] = useState(sampleBlogs);\n    const [usernames, setUsernames] = useState(mockUsernames);\n    const [followingBlogs, setFollowingBlogs] = useState(sampleFollowingBlogs);\n\n    return (\n        <>\n            <Header usernames={usernames} followers={[]} following={[]} />\n            <div id=\"main-body\">\n                <div id=\"content\">\n                    <GetLoggedInUserBlogs blogs={blogs} isLoggedInUser={false} />\n                    <GetFollowingBlogs blogs={followingBlogs} isLoggedInUser={true} />\n                </div>\n                <div id=\"decoration\"></div>\n            </div>\n        </>\n    );\n}\n\nfunction Header({ usernames, followers, following }) {\n    const logo = \"BlogSpace\";\n    const navigate = useNavigate();\n    const token = \"sample-token\"; // Sample token for testing\n\n    const handlePost = () => {\n        navigate(\"/blogForm\");\n    };\n\n    const handleLogout = async () => {\n        alert(\"You have logged out!\");\n    };\n\n    const showFollowing = () => {\n        navigate(\"/following\");\n    };\n\n    // This will do the dynamic search\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filteredUsernames, setFilteredUsernames] = useState([]);\n    const handleSearch = (event) => {\n        const value = event.target.value;\n        setSearchTerm(value);\n\n        if (value === '') {\n            setFilteredUsernames([]);\n        } else {\n            const tempUsernames = usernames.filter(username =>\n                username.toLowerCase().includes(value.toLowerCase())\n            );\n            setFilteredUsernames(tempUsernames);\n        }\n    };\n\n    function handlePersonPage(name) {\n        navigate(`person/${name}`)\n    }\n\n    return (\n        <>\n            <header>\n                <div><span id=\"logo\">{logo}</span></div>\n                <div id=\"home-page-search\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search usernames...\"\n                        value={searchTerm}\n                        onChange={handleSearch}\n                    />\n                    {usernames.length > 0 && (\n                        <ol className=\"username-list\">\n                            {filteredUsernames.map((filteredUsername, index) => (\n                                <li key={index} onClick={() => handlePersonPage(filteredUsername)}>\n                                    <Link to={`/person/${filteredUsername}`}>{filteredUsername}</Link>\n                                </li>\n                            ))}\n                        </ol>\n                    )}\n                </div>\n                <div id=\"account-properties\">\n                    <div>\n                        <span id=\"Post\" onClick={handlePost}>\n                            Post\n                        </span>\n                    </div>\n                    <div>\n                        <span id=\"following\" onClick={showFollowing}>\n                            Following\n                        </span>\n                    </div>\n                    <div>\n                        <span id=\"logout\" onClick={handleLogout}>\n                            Logout\n                        </span>\n                    </div>\n                </div>\n            </header>\n        </>\n    );\n}\n\nfunction GetFollowingBlogs({ blogs, isLoggedInUser }) {\n    return (\n        <>\n            <div id=\"myBlogs\">\n                <p style={{ fontSize: 30 + \"px\", display: \"flex\", marginLeft: 640 + \"px\" }}> My Following Blogs </p>\n                {blogs.map((blog, index) => (\n                    <GetOneBlog\n                        key={index}\n                        blog_id={blog.id}\n                        content={blog.content}\n                        title={blog.title}\n                        likesCount={blog.likes}\n                        timeStamp={blog.created_at}\n                        isLoggedInUser={false}\n                    />\n                ))}\n            </div>\n        </>\n    );\n}\n\nfunction GetLoggedInUserBlogs({ blogs, isLoggedInUser }) {\n    return (\n        <>\n            <div id=\"myBlogs\">\n                <p style={{ fontSize: 30 + \"px\", display: \"flex\", marginLeft: 640 + \"px\" }}> My Blogs </p>\n                {blogs.map((blog, index) => (\n                    <GetOneBlog\n                        key={index}\n                        blog_id={blog.id}\n                        content={blog.content}\n                        title={blog.title}\n                        likesCount={blog.likes}\n                        timeStamp={blog.created_at}\n                        isLoggedInUser={true}\n                    />\n                ))}\n            </div>\n        </>\n    );\n}\n\nfunction GetOneBlog({ blog_id, title, content, likesCount, timeStamp, isLoggedInUser }) {\n    const navigate = useNavigate();\n\n    const showBlogInSeperatePage = () => {\n        // navigate(`/blog/${blog_id}`);\n    };\n\n    const showBlogInFullScreen = () => {\n        // navigate(`/blog/${blog_id}`);\n    };\n\n    return (\n        <div className=\"blog\" onClick={showBlogInSeperatePage}>\n            <div className=\"blog-header\">\n                {isLoggedInUser === true ?\n                    <Link to={`/fullContent/true/${title}/${content}/${likesCount}/${timeStamp}`}>\n                        <p id=\"blog-title\" onClick={showBlogInFullScreen}>{title}</p>\n                    </Link> :\n                    <Link to={`/fullContent/false/${title}/${content}/${likesCount}/${timeStamp}/${blog_id}`}>\n                        <p id=\"blog-title\" onClick={showBlogInFullScreen}>{title}</p>\n                    </Link>\n                }\n                <p>Created at: {timeStamp}</p>\n            </div>\n            <div className=\"content\">\n                {content}\n            </div>\n            <div className=\"blog-footer\">\n                <div className=\"likes\">\n                    <img src={like_pic} alt=\"Likes\" />\n                    <p className=\"likes\" style={{ margin: 0 + \"px\", marginLeft: 5 + \"px\" }}>\n                        {likesCount}\n                    </p>\n                </div>\n                <div className=\"comments\">\n                    <Link to={`/showComments/${blog_id}/${isLoggedInUser}`}>Comments</Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAKA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}