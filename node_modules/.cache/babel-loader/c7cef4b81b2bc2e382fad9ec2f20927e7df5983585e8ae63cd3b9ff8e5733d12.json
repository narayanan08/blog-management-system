{"ast":null,"code":"var _jsxFileName = \"/Users/vtbadrinarayanan/Desktop/project/Main8 copy/src/home_page/search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserSearch = ({\n  users\n}) => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState(users);\n  useEffect(() => {\n    // Filter users whenever the search query changes\n    setFilteredUsers(users.filter(user => user.toLowerCase().includes(searchQuery.toLowerCase())));\n  }, [searchQuery, users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a username\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UserSearch, \"cT6nd3ZCXnAnhSaAAvkcmH46r2E=\");\n_c = UserSearch;\nexport default UserSearch;\nvar _c;\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","UserSearch","users","_s","searchQuery","setSearchQuery","filteredUsers","setFilteredUsers","filter","user","toLowerCase","includes","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/Users/vtbadrinarayanan/Desktop/project/Main8 copy/src/home_page/search.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst UserSearch = ({ users }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState(users);\n\n  useEffect(() => {\n    // Filter users whenever the search query changes\n    setFilteredUsers(\n      users.filter(user =>\n        user.toLowerCase().includes(searchQuery.toLowerCase())\n      )\n    );\n  }, [searchQuery, users]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Search for a username\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n      <ul>\n        {filteredUsers.map((user, index) => (\n          <li key={index}>{user}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default UserSearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACO,KAAK,CAAC;EAEzDN,SAAS,CAAC,MAAM;IACd;IACAW,gBAAgB,CACdL,KAAK,CAACM,MAAM,CAACC,IAAI,IACfA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,WAAW,CAACM,WAAW,CAAC,CAAC,CACvD,CACF,CAAC;EACH,CAAC,EAAE,CAACN,WAAW,EAAEF,KAAK,CAAC,CAAC;EAExB,oBACEJ,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCC,KAAK,EAAEX,WAAY;MACnBY,QAAQ,EAAGC,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFxB,OAAA;MAAAc,QAAA,EACGN,aAAa,CAACiB,GAAG,CAAC,CAACd,IAAI,EAAEe,KAAK,kBAC7B1B,OAAA;QAAAc,QAAA,EAAiBH;MAAI,GAAZe,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAACnB,EAAA,CA5BIF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA8BhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}